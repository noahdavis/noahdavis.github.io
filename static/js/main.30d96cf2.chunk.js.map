{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","name","job","onClick","removeCharacter","Table","Form","initialState","state","handleChange","event","target","value","setState","submitForm","handleSubmit","this","htmlFor","type","id","placeholder","onChange","Component","App","characters","filter","character","i","className","ReactDOM","render","document","getElementById"],"mappings":"0OAAMA,EAAc,WAChB,OACI,gCACI,+BACA,sCACA,2CAMNC,EAAY,SAACC,GACjB,IAAMC,EAAOD,EAAME,cAAcC,KAAI,SAACC,EAAKC,GACzC,OACE,+BACE,6BAAKD,EAAIE,OACT,6BAAKF,EAAIG,MACT,6BACE,wBAAQC,QAAS,kBAAMR,EAAMS,gBAAgBJ,IAA7C,wBAJKA,MASb,OACE,gCAAQJ,KAcGS,EAVD,SAACV,GAAW,IACjBE,EAAkCF,EAAlCE,cAAeO,EAAmBT,EAAnBS,gBACtB,OACI,kCACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAWP,cAAeA,EAAeO,gBAAiBA,Q,OCiBnDE,E,4MA/CXC,aAAe,CACXN,KAAM,GACNC,IAAK,I,EAGTM,MAAQ,EAAKD,a,EAEbE,aAAe,SAACC,GAAW,IAAD,EACAA,EAAMC,OAArBV,EADe,EACfA,KAAMW,EADS,EACTA,MAEb,EAAKC,SAAL,eACKZ,EAAOW,K,EAIhBE,WAAa,WACT,EAAKnB,MAAMoB,aAAa,EAAKP,OAC7B,EAAKK,SAAS,EAAKN,e,4CAGvB,WAAU,IAAD,EACiBS,KAAKR,MAAnBP,EADH,EACGA,KAAMC,EADT,EACSA,IAEd,OACI,iCACI,uBAAOe,QAAQ,OAAf,kBACA,uBACIC,KAAK,OACLjB,KAAK,OACLkB,GAAG,OACHC,YAAY,eACZR,MAAOX,EACPoB,SAAUL,KAAKP,eACnB,uBAAOQ,QAAQ,MAAf,iBACA,uBACIC,KAAK,OACLjB,KAAK,MACLkB,GAAG,MACHC,YAAY,cACZR,MAAOV,EACPmB,SAAUL,KAAKP,eACnB,uBAAOS,KAAK,SAASN,MAAM,SAAST,QAASa,KAAKF,oB,GA1C/CQ,aCgCFC,E,4MA7Bff,MAAQ,CACNgB,WAAY,I,EAGdpB,gBAAkB,SAACJ,GAAW,IACrBwB,EAAc,EAAKhB,MAAnBgB,WACP,EAAKX,SAAS,CACZW,WAAYA,EAAWC,QAAO,SAACC,EAAWC,GACxC,OAAOA,IAAM3B,Q,EAKnBe,aAAe,SAACW,GACd,EAAKb,SAAS,CAACW,WAAW,GAAD,mBAAM,EAAKhB,MAAMgB,YAAjB,CAA6BE,O,4CAGxD,WAAU,IACAF,EAAeR,KAAKR,MAApBgB,WAER,OACE,sBAAKI,UAAU,MAAf,UACE,cAAC,EAAD,CAAO/B,cAAe2B,EAAYpB,gBAAiBY,KAAKZ,kBACxD,cAAC,EAAD,CAAMW,aAAcC,KAAKD,sB,GAxBfO,aCClBO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.30d96cf2.chunk.js","sourcesContent":["const TableHeader = () => {\r\n    return (\r\n        <thead>\r\n            <tr>\r\n            <th>Name</th>\r\n            <th>Job</th>\r\n            </tr>\r\n        </thead>\r\n    )\r\n}\r\n\r\nconst TableBody = (props) => {\r\n  const rows = props.characterData.map((row, index) => {\r\n    return (\r\n      <tr key={index}>\r\n        <td>{row.name}</td>\r\n        <td>{row.job}</td>\r\n        <td>\r\n          <button onClick={() => props.removeCharacter(index)}>Delete</button>\r\n        </td>\r\n      </tr>\r\n    )\r\n  })\r\n  return (\r\n    <tbody>{rows}</tbody>\r\n  )\r\n}\r\n\r\nconst Table = (props) => {\r\n  const {characterData, removeCharacter} = props\r\n  return(\r\n      <table>\r\n        <TableHeader />\r\n        <TableBody characterData={characterData} removeCharacter={removeCharacter}/>\r\n      </table>\r\n  )\r\n}\r\n\r\nexport default Table","import React, {Component} from \"react\"\r\n\r\nclass Form extends Component {\r\n    initialState = {\r\n        name: \"\",\r\n        job: \"\"\r\n    }\r\n\r\n    state = this.initialState\r\n\r\n    handleChange = (event) => {\r\n        const {name, value} = event.target\r\n\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    submitForm = () => {\r\n        this.props.handleSubmit(this.state)\r\n        this.setState(this.initialState)\r\n    }\r\n\r\n    render() {\r\n        const { name, job } = this.state;\r\n\r\n        return (\r\n            <form>\r\n                <label htmlFor=\"name\">Name</label>\r\n                <input \r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    id=\"name\"\r\n                    placeholder=\"Enter a Name\"\r\n                    value={name}\r\n                    onChange={this.handleChange} />\r\n                <label htmlFor=\"job\">Job</label>\r\n                <input \r\n                    type=\"text\"\r\n                    name=\"job\"\r\n                    id=\"job\"\r\n                    placeholder=\"Enter a job\"\r\n                    value={job}\r\n                    onChange={this.handleChange} />\r\n                <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Form;","import React, {Component} from \"react\";\nimport Table from \"./Table\";\nimport Form from \"./Form\";\n\nclass App extends Component {\n  state = {\n    characters: []\n  }\n\n  removeCharacter = (index) => {\n    const {characters} = this.state\n    this.setState({\n      characters: characters.filter((character, i) => {\n        return i !== index\n      })\n    })\n  }\n\n  handleSubmit = (character) => {\n    this.setState({characters: [...this.state.characters, character]})\n  }\n\n  render() {\n    const { characters } = this.state\n\n    return (\n      <div className=\"App\">\n        <Table characterData={characters} removeCharacter={this.removeCharacter} />\n        <Form handleSubmit={this.handleSubmit} />\n      </div>\n    )\n  }\n}\n\n  export default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}