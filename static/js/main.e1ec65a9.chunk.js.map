{"version":3,"sources":["Form.js","App.js","index.js"],"names":["Form","initialState","answer","state","handleChange","event","target","name","value","setState","submitForm","props","handleSubmit","this","htmlFor","type","id","placeholder","onChange","onClick","Component","App","prompts","prompt","currentPrompt","correctAnswer","incorrectAnswer","response","length","className","ReactDOM","render","document","getElementById"],"mappings":"0OAyCeA,E,4MAtCXC,aAAe,CACXC,OAAQ,I,EAGZC,MAAQ,EAAKF,a,EAEbG,aAAe,SAACC,GAAW,IAAD,EACAA,EAAMC,OAArBC,EADe,EACfA,KAAMC,EADS,EACTA,MAEb,EAAKC,SAAL,eACKF,EAAOC,K,EAIhBE,WAAa,WACT,EAAKC,MAAMC,aAAa,EAAKT,OAC7B,EAAKM,SAAS,EAAKR,e,4CAGvB,WAAU,IACEC,EAAWW,KAAKV,MAAhBD,OAER,OACI,iCACI,uBAAOY,QAAQ,SAAf,oBACA,uBACIC,KAAK,OACLR,KAAK,SACLS,GAAG,SACHC,YAAY,2BACZT,MAAON,EACPgB,SAAUL,KAAKT,eACnB,uBAAOW,KAAK,SAASP,MAAM,SAASW,QAASN,KAAKH,oB,GAjC/CU,aCmEFC,E,4MAjEflB,MAAQ,CACNmB,QAAS,CACP,CACEC,OAAQ,yCACRrB,OAAQ,OAEV,CACEqB,OAAQ,qCACRrB,OAAQ,WAEV,CACEqB,OAAQ,oFACRrB,OAAQ,sBAEV,CACEqB,OAAQ,kCACRrB,OAAQ,OAEV,CACEqB,OAAQ,gEACRrB,OAAQ,aAEV,CACEqB,OAAQ,6GAGZC,cAAe,EACfC,eAAe,EACfC,iBAAiB,G,EAGnBd,aAAe,SAACe,GACVA,EAASzB,SAAW,EAAKC,MAAMmB,QAAQ,EAAKnB,MAAMqB,eAAetB,QAEnE,EAAKO,SAAS,CAACiB,iBAAiB,IAC5B,EAAKvB,MAAMqB,gBAAmB,EAAKrB,MAAMmB,QAAQM,OAAS,GAE5D,EAAKnB,SAAS,CAACgB,eAAe,IAGhC,EAAKhB,SAAS,CAACe,cAAe,EAAKrB,MAAMqB,cAAgB,MAGzD,EAAKf,SAAS,CAACiB,iBAAiB,IAChC,EAAKjB,SAAS,CAACgB,eAAe,M,4CAIlC,WAAU,IACAH,EAAYT,KAAKV,MAAjBmB,QAER,OACE,sBAAKO,UAAU,MAAf,UACE,mFACEhB,KAAKV,MAAMqB,cAAiBX,KAAKV,MAAMmB,QAAQM,OAAS,GAAO,6BAAKN,EAAQT,KAAKV,MAAMqB,eAAeD,SACtGV,KAAKV,MAAMqB,cAAiBX,KAAKV,MAAMmB,QAAQM,OAAS,GAAM,cAAC,EAAD,CAAMhB,aAAcC,KAAKD,eACvFC,KAAKV,MAAMqB,gBAAmBX,KAAKV,MAAMmB,QAAQM,OAAS,GAAM,6BAAKN,EAAQT,KAAKV,MAAMqB,eAAeD,SACvGV,KAAKV,MAAMqB,cAAiBX,KAAKV,MAAMmB,QAAQM,OAAS,GAAO,2CAAcf,KAAKV,MAAMqB,cAAgB,EAAzC,IAA6CX,KAAKV,MAAMmB,QAAQM,OAAO,KACvIf,KAAKV,MAAMsB,eAAiB,0CAC5BZ,KAAKV,MAAMuB,iBAAmB,mD,GA5DrBN,aCElBU,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.e1ec65a9.chunk.js","sourcesContent":["import React, {Component} from \"react\"\r\n\r\nclass Form extends Component {\r\n    initialState = {\r\n        answer: \"\"\r\n    }\r\n\r\n    state = this.initialState\r\n\r\n    handleChange = (event) => {\r\n        const {name, value} = event.target\r\n\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    submitForm = () => {\r\n        this.props.handleSubmit(this.state)\r\n        this.setState(this.initialState)\r\n    }\r\n\r\n    render() {\r\n        const { answer } = this.state;\r\n\r\n        return (\r\n            <form>\r\n                <label htmlFor=\"answer\">Answer</label>\r\n                <input \r\n                    type=\"text\"\r\n                    name=\"answer\"\r\n                    id=\"answer\"\r\n                    placeholder=\"Enter the correct answer\"\r\n                    value={answer}\r\n                    onChange={this.handleChange} />\r\n                <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Form;","import React, {Component} from \"react\";\nimport Form from \"./Form\";\n\nclass App extends Component {\n  state = {\n    prompts: [\n      {\n        prompt: \"A squirrel, trying to get its __ __ __\",\n        answer: \"nut\"\n      },\n      {\n        prompt: \"Let's watch a __ __ __ __ __ __ __\",\n        answer: \"shmovie\"\n      },\n      {\n        prompt: \"Barb is a __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ (all one word)\",\n        answer: \"motherfuckingbitch\"\n      },\n      {\n        prompt: \"Imma take a __ __ __ right here\",\n        answer: \"nap\"\n      },\n      {\n        prompt: \"What you say when you get an idea: __ __ __ __ __ __ __ __ __\",\n        answer: \"lightbulb\"\n      },\n      {\n        prompt: \"You got them all! Proud of you. The secret code is 'mac and mancos' to prove you actually got to the end\"\n      }\n    ],\n    currentPrompt: 0,\n    correctAnswer: false,\n    incorrectAnswer: false,\n  }\n\n  handleSubmit = (response) => {\n    if (response.answer === this.state.prompts[this.state.currentPrompt].answer)\n    {\n      this.setState({incorrectAnswer: false});\n      if (this.state.currentPrompt !== (this.state.prompts.length - 2))\n      {\n        this.setState({correctAnswer: true});\n      }\n      \n      this.setState({currentPrompt: this.state.currentPrompt + 1})\n    }\n    else{\n      this.setState({incorrectAnswer: true});\n      this.setState({correctAnswer: false});\n    }\n  }\n\n  render() {\n    const { prompts } = this.state\n\n    return (\n      <div className=\"App\">\n        <h1>Fill in the correct blank! (all lowercase please)</h1>\n        {(this.state.currentPrompt < (this.state.prompts.length - 1)) && <h2>{prompts[this.state.currentPrompt].prompt}</h2>}\n        {(this.state.currentPrompt < (this.state.prompts.length - 1)) &&<Form handleSubmit={this.handleSubmit} />}\n        {(this.state.currentPrompt === (this.state.prompts.length - 1)) &&<h2>{prompts[this.state.currentPrompt].prompt}</h2>}\n        {(this.state.currentPrompt < (this.state.prompts.length - 1)) && <h3>Question {this.state.currentPrompt + 1}/{this.state.prompts.length-1}</h3>}\n        {this.state.correctAnswer && <h3>Correct!</h3>}\n        {this.state.incorrectAnswer && <h3>Try again!</h3>}\n      </div>\n    )\n  }\n}\n\n  export default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}